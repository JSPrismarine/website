{
    "$schema": "https://json.schemastore.org/eslintrc.json",
    "root": true,
    "env": {
        "browser": false,
        "es2024": true,
        "node": true
    },
    "extends": [
        "next/core-web-vitals",
        "plugin:jsx-a11y/recommended",
        "plugin:prettier/recommended",
        "plugin:react-hooks/recommended",
        "plugin:react/recommended"
    ],
    "plugins": [
        "@typescript-eslint",
        "eslint-plugin-jsdoc",
        "import",
        "jsx-a11y",
        "prettier",
        "react-hooks",
        "react",
        "simple-import-sort",
        "unused-imports"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "sourceType": "module",
        "ecmaVersion": "latest",
        "project": [
            "./tsconfig.json",
            "./tsconfig.node.json",
            "./tsconfig.test.json",
            "./apps/**/tsconfig.json",
            "./apps/**/tsconfig.test.json",
            "./packages/**/tsconfig.json",
            "./packages/**/tsconfig.node.json",
            "./packages/**/tsconfig.test.json"
        ]
    },
    "rules": {
        "@typescript-eslint/consistent-type-exports": ["error", { "fixMixedExportsWithInlineTypeSpecifier": false }],
        "@typescript-eslint/consistent-type-imports": [
            "error",
            { "fixStyle": "separate-type-imports", "prefer": "type-imports" }
        ],
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-unnecessary-condition": "warn",
        "brace-style": [
            "error",
            "1tbs",
            {
                "allowSingleLine": true
            }
        ],
        "consistent-return": "error",
        "import/first": "off",
        "import/order": "off",
        "indent": "off",
        "jsdoc/check-alignment": "error",
        "jsdoc/check-indentation": "off",
        "jsdoc/check-line-alignment": "error",
        "jsdoc/check-param-names": "error",
        "jsdoc/check-property-names": "error",
        "jsdoc/check-syntax": "error",
        "jsdoc/check-types": "error",
        "jsdoc/require-hyphen-before-param-description": "error",
        "jsx-a11y/alt-text": "off",
        "jsx-a11y/anchor-is-valid": "off",
        "no-console": [
            "error",
            {
                "allow": ["debug", "warn", "error"]
            }
        ],
        "no-mixed-operators": "off",
        "no-unused-vars": "off",
        "no-useless-constructor": "off",
        "prettier/prettier": "error",
        "react-hooks/exhaustive-deps": "off",
        "react-hooks/rules-of-hooks": "error",
        "react/jsx-uses-react": "off",
        "react/no-children-prop": "off",
        "react/no-find-dom-node": "off",
        "react/no-string-refs": "off",
        "react/prop-types": "error",
        "react/react-in-jsx-scope": "off",
        "semi": ["error", "always"],
        "sort-imports": "off",
        "simple-import-sort/exports": "error",
        "simple-import-sort/imports": [
            "error",
            {
                "groups": [
                    ["server-only"],
                    // Side effect imports and styles.
                    ["^\\u0000", "vitest", "^.+\\.s?css$"],
                    // Node.js built-ins.
                    ["^node:", "^react", "^next"],
                    // Our packages.
                    ["^@nordcom(/.*|$)"],
                    // Path aliases.
                    ["^@/\\w", "^"],
                    // Local components.
                    ["^@/components(/.*|$)"],
                    // Parent imports.
                    ["^\\.\\.(?!/?$)"],
                    // Relative imports.
                    ["^\\.", "^\\./?$"],
                    // Types.
                    ["^.+\\u0000$", "^.+\\u0000$\\."]
                ]
            }
        ],
        "standard/computed-property-even-spacing": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
            "warn",
            {
                "vars": "all",
                "varsIgnorePattern": "^_",
                "args": "after-used",
                "argsIgnorePattern": "^_"
            }
        ]
    }
}
